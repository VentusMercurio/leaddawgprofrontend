/* src/pages/DashboardPage.module.css */
.loadingPage {
  display: flex;
  justify-content: center;
  align-items: center;
  height: calc(100vh - 75px); /* Assuming navbar height */
  font-size: 1.5rem;
  color: var(--text-muted-color);
}

.dashboardContainer {
  max-width: 1200px;
  margin: 30px auto;
  padding: 20px;
  color: var(--text-color);
  background-color: #18181b; /* Example dark background, adjust if needed or if globally set */
                               /* Ribbons need a background to show against */
  position: relative;       /* Essential for positioning pseudo-elements */
  overflow: hidden;         /* Essential to clip the ribbons */
  border-radius: 8px;       /* Optional: if you want rounded corners for the container and ribbons clipping */
  z-index: 0;               /* Establish a stacking context */
}

/* New Ribbon Effects for Dashboard Container */
.dashboardContainer::before,
.dashboardContainer::after {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 200%; /* Wider than container to allow for sweep and rotation */
  height: 150px; /* Thickness of the ribbon - adjust as desired */
  opacity: 0.15; /* Pronouncement of the ribbon - adjust for subtlety */
  z-index: -1;  /* Position ribbons BEHIND the container's direct content but above its background-color */
  pointer-events: none;
  transform-origin: 0 0;
}

/* Magenta Ribbon */
.dashboardContainer::before {
  background: linear-gradient(
    45deg,
    rgba(224, 32, 224, 0),
    rgba(224, 32, 224, 0.4) 25%, /* Adjusted opacity within gradient */
    rgba(224, 32, 224, 0.4) 75%,
    rgba(224, 32, 224, 0)
  );
  top: 10%; /* Vertical position */
  transform: translateX(-100%) rotate(-15deg);
  animation: flowDashboardMagentaRibbon 28s linear infinite;
  animation-delay: -3s;
}

/* Teal Ribbon */
.dashboardContainer::after {
  background: linear-gradient(
    -45deg,
    rgba(0, 192, 192, 0),
    rgba(0, 192, 192, 0.4) 25%, /* Adjusted opacity within gradient */
    rgba(0, 192, 192, 0.4) 75%,
    rgba(0, 192, 192, 0)
  );
  top: 60%; /* Different vertical position */
  transform: translateX(-100%) rotate(12deg);
  animation: flowDashboardTealRibbon 35s linear infinite;
}

@keyframes flowDashboardMagentaRibbon {
  0% {
    transform: translateX(-60%) translateY(-15%) rotate(-15deg);
  }
  50% {
    transform: translateX(0%) translateY(0%) rotate(-18deg);
  }
  100% {
    transform: translateX(60%) translateY(15%) rotate(-15deg);
  }
}

@keyframes flowDashboardTealRibbon {
  0% {
    transform: translateX(-60%) translateY(15%) rotate(12deg);
  }
  50% {
    transform: translateX(0%) translateY(0%) rotate(15deg);
  }
  100% {
    transform: translateX(60%) translateY(-15%) rotate(12deg);
  }
}
/* End of New Ribbon Effects */


.dashboardHeader {
  margin-bottom: 30px;
  padding-bottom: 20px;
  border-bottom: 1px solid var(--border-color);
  /* Ensure content is above ribbons if needed, though default flow should work */
  position: relative; 
  z-index: 1; 
}

.dashboardHeader h1 {
  font-size: 2.2rem;
  font-weight: 700;
  font-family: 'Poppins', sans-serif;
  margin-bottom: 8px;
  color: rgba(255, 255, 255, 0.95);
}

.dashboardHeader p {
  font-size: 1rem;
  color: var(--text-muted-color);
}

.loadingMessage, .noLeadsMessage {
  text-align: center;
  font-size: 1.1rem;
  color: var(--text-muted-color);
  padding: 50px 20px;
  background-color: var(--bg-surface);
  border-radius: 8px;
  border: 1px solid var(--border-color);
  position: relative; /* Ensure content is above ribbons */
  z-index: 1;
}

.errorMessage {
  background-color: rgba(220, 53, 69, 0.15);
  color: #f8d7da;
  border: 1px solid var(--danger-color);
  padding: 15px;
  border-radius: 6px;
  margin-bottom: 20px;
  text-align: center;
  position: relative; /* Ensure content is above ribbons */
  z-index: 1;
}

.leadsTableContainer {
  background-color: var(--bg-surface);
  border-radius: 8px;
  padding: 20px;
  box-shadow: 0 5px 15px rgba(0,0,0,0.2);
  border: 1px solid var(--border-color);
  position: relative; /* Ensure content is above ribbons */
  z-index: 1;
}

.leadsTable {
  width: 100%;
  border-collapse: collapse;
}

.leadsTable th, .leadsTable td {
  padding: 12px 15px;
  text-align: left;
  border-bottom: 1px solid var(--border-color);
}

.leadsTable th {
  font-weight: 600;
  font-size: 0.9rem;
  text-transform: uppercase;
  color: var(--text-muted-color);
  background-color: rgba(255,255,255,0.03); /* Very subtle header bg */
}

.leadsTable tr:last-child td {
  border-bottom: none;
}

.leadsTable tr:hover td { /* Subtle hover for table rows */
  background-color: rgba(255,255,255,0.02);
}

.statusSelect {
  padding: 8px 10px;
  border-radius: 6px;
  border: 1px solid #444; /* Darker border */
  background-color: #2a2a2e; /* Input-like background */
  color: var(--text-color);
  font-size: 0.9rem;
  min-width: 150px; /* Ensure dropdown is wide enough */
}
.statusSelect:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}

.actionButton {
  padding: 6px 12px;
  font-size: 0.85rem;
  border-radius: 5px;
  cursor: pointer;
  background-color: var(--primary-color);
  color: white;
  border: none;
  transition: background-color 0.2s ease;
}
.actionButton:hover {
  background-color: var(--primary-hover-color);
}

.isUpdatingRow td { /* Style for row while its status is being updated */
  opacity: 0.6;
  pointer-events: none; /* Prevent interaction while updating */
}

/* This duplicate .dashboardHeader rule was in your original, I'll keep the one above this section */
/* .dashboardHeader {
  margin-bottom: 30px;
  padding-bottom: 20px;
  border-bottom: 1px solid var(--border-color);
  display: flex; 
  justify-content: space-between; 
  align-items: center; 
} */
.dashboardHeader > div { /* Allow h1 and p to stack */
    flex-grow: 1;
}

.generalPitchButton {
  background-color: var(--accent-color);
  color: #111;
  border: none;
  padding: 10px 18px;
  border-radius: 6px;
  font-size: 0.9rem;
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.2s ease;
  white-space: nowrap; /* Prevent text wrapping */
  flex-shrink: 0; /* Prevent button from shrinking */
}
.generalPitchButton:hover {
  background-color: var(--accent-hover-color);
}